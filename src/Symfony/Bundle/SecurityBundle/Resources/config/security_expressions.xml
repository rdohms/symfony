<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="security.expressions.voter.class">Symfony\Bundle\SecurityBundle\Security\Expression\LazyLoadingExpressionVoter</parameter>
        <parameter key="security.expressions.handler.class">Symfony\Bundle\SecurityBundle\Security\Expression\ContainerAwareExpressionHandler</parameter>
        
        <parameter key="security.expressions.compiler.class">Symfony\Component\Security\Core\Authorization\Expression\ExpressionCompiler</parameter>
        <parameter key="security.expressions.expression.class">Symfony\Component\Security\Core\Authorization\Expression\Expression</parameter>
        
        <parameter key="security.expressions.variable_compiler.class">Symfony\Bundle\SecurityBundle\Security\Expression\Compiler\ContainerAwareVariableCompiler</parameter>
    </parameters>

    <services>
        <service id="security.expressions.variable_compiler" class="%security.expressions.variable_compiler.class%" public="false">
            <tag name="security.expressions.type_compiler" />
            
            <!-- Some variables for built-in compilers for lazy-loading -->
            <tag name="security.expressions.variable" variable="trust_resolver"
                 service="security.authentication.trust_resolver" />
        </service>
    
        <service id="security.expressions.voter" class="%security.expressions.voter.class%" public="false">
            <argument type="service" id="security.expressions.handler" />
            
            <call method="setLazyCompiler">
                <argument type="service" id="service_container" />
                <argument>security.expressions.compiler</argument>
            </call>
            
            <tag name="security.voter" priority="230" />
        </service>
        
        <service id="security.expressions.handler" class="%security.expressions.handler.class%" public="false">
            <argument type="service" id="service_container" />
        </service>
        
        <service id="security.expressions.compiler" class="%security.expressions.compiler.class%" />
        
        <service id="security.expressions.expression" class="%security.expressions.expression.class%" public="false" abstract="true" />
    </services>
</container>
